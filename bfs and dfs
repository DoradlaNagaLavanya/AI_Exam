def dfs(graph,node):
    visited=[]
    queue=[]
    visited.append(node)
    queue.append(node)
    while queue:
        m = queue.pop()
        print(m,end=' ')

        for neighbour in graph[m]:
            if(neighbour not in visited):
                visited.append(neighbour)
                queue.append(neighbour)
def bfs(graph,node):
    visited=[]
    queue=[]
    visited.append(node)
    queue.append(node)
    while queue:
        m = queue.pop(0)
        print(m,end=' ')

        for neighbour in graph[m]:
            if(neighbour not in visited):
                visited.append(neighbour)
                queue.append(neighbour)

if __name__=='__main__':
    graph = { 5:[3,7], 3:[2,4], 7:[8], 2:[], 4:[8], 8:[] }
    print("Depth first search of the given graph",end=' ')
    dfs(graph,5)
    print()
    print("Breadth first search of the given graph",end=' ')
    bfs(graph,5)
